- expand assembler
  - add label
  - add comment-to-end-of-line
  - add org
  - add equ (or hardcode values?)
  - add 'ds' to reserve bytes
  - follow CPM/zexall.src 

DONE - LD16
  - LD BC, FFFF
- PUSH+POP
- IX and IY
  - assembly support. yikes.
- LDIR
- DJNZ



- pass byte channel or io.Reader to d.Decode
  - maybe?

- Have one LD8 type, which has a src and a dst
  - encode the src/dst part in a type (or closure!)
  - have a NewLD8 ctor which disallows the invalid combinations
  - rewrite decodeILD8 and ParseLD in terms of this
  - then move onto LD16

- pull out a general "hi3" string <-> num for logic ops etc
  - and use it to initialise the MakeParseAccum in AssemblyParser

- Add a RST16 hack which debug-prints contents of A?
  - need a way to run until test

- write a program which stores 0x16 to A then prints it


- add INC8 and DEC8

- add (HL) address mode to R8Loc

- add LD16, INC16, DEC16

- add DJNZ

- interrupts

profit

- go-gl visualiser. registers, memory reads+writes, fading over time

- spectrum emulator:
  - go-gl bitmapped spectrum display
  - keyboard
  - other I/O
  - spectrum ROM
