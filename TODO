- restart:
  - implement full decoder
  - consume byte channel
  - instruction channel return

  - instruction.go  : types for all instructions, initially just String() in the interface
    - requires supporting machine types
      - Src8 : place from which we can read a byte
      - Dst8 : place to which we can write a bute
      - Src16 : 16bit src
      - Dst16 : 16bit dst
    - need register concepts for String() repr
      - R8  : implement Src8, Dst8
      - R16 : implement Src16, Dst16
      - Imm8 : implement Src8
      - Imm16 : implement Src16
      - ImmAddr16 : implement Src16, Dst16
        - ??? or wrap an 'addr' around any other Src16/Dst16?
  - decode.go : consume byte stream, return instruction stream
    - we now have a disassembler (separate binary, operates on a file .bin->.z80)
  - assemble.go : string -> instruction
    - add Encode() to instruction too, and we can full-test the encode
    - new binary assemble .z80 file to .bin
  - zog.go : machine (registers, memory)






- expand assembler
  - add label
  - add comment-to-end-of-line
  - add org
  - add equ (or hardcode values?)
  - add 'ds' to reserve bytes
  - follow CPM/zexall.src 

DONE - LD16
  DONE - LD BC, FFFF
- Test LD16
DONE - PUSH+POP
- indirect load
  - LD BC, (0x1234)
- IX and IY
  - assembly support. yikes.
- LDIR
- DJNZ


- write decoder in terms of this link:
  http://www.z80.info/decoding.htm#ed

- pass byte channel or io.Reader to d.Decode
  - maybe?

- Have one LD8 type, which has a src and a dst
  - encode the src/dst part in a type (or closure!)
  - have a NewLD8 ctor which disallows the invalid combinations
  - rewrite decodeILD8 and ParseLD in terms of this
  - then move onto LD16

- pull out a general "hi3" string <-> num for logic ops etc
  - and use it to initialise the MakeParseAccum in AssemblyParser

- Add a RST16 hack which debug-prints contents of A?
  - need a way to run until test

- write a program which stores 0x16 to A then prints it


- add INC8 and DEC8

- add (HL) address mode to R8Loc

- add LD16, INC16, DEC16

- add DJNZ

- interrupts

profit

- go-gl visualiser. registers, memory reads+writes, fading over time

- spectrum emulator:
  - go-gl bitmapped spectrum display
  - keyboard
  - other I/O
  - spectrum ROM
