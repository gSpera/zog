DONE - get a cmdline tool to run a binary file
  - assemble some examples with zmac assembler

DONE - prelim.com running

- improve flags
  - how to handle half-carry?

- take prelim.z80 from zexall and port in the same way that CPM.zip/zexall was ported
DONE - run prelim on emulator with CPM prelude


  - grab a ROM and see where it dies! (spectrum-roms ubuntu pkg)
  - try and find some example programs
  - write a test rom/prelude of some kind
    - use it if cmdline to execute given

  DONE - CP/M has simple I/O for zexall
    - add 'zexall/cp/m support' option
      - write some Z80 assembly
      - drive an I/O port to write chars
        - register I/O handlers

- write enable-able logging streams (e.g. 'Z:' logging for locations)
  - tagged logging streams?

- spin up http server (gop?)
  - serve machine state (num cycles, registers, ...?) over http
  - ? serve zx spectrum display image over ws?


- emulator
  - implement some debug hook (zexall compatible)
    - conout to write to console
    - RST 16 :-)
    - jp 0 to "reboot cp/m"


  - zexdoc
  - zexall

- add cmdline disassembler
  - try on some big files
  - add (made up) labels for jump targets in disassembler
  - add some directives (org, data bytes)
